apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: ready-up
  name: ready-up
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ready-up
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ready-up
    spec:
      containers:
        - image: {{.Values.ready_up.imageRepository}}/ready-up:@project.version@
          imagePullPolicy: Always
          name: ready-up
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: application-config
              mountPath: /opt/localmovie/config
              readOnly: true
#            - name: secrets
#              mountPath: /opt/localmovie/secrets
#              readOnly: true
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: application-config
          configMap:
            name: ready-up
            items:
              - key: bootstrap.properties
                path: bootstrap.properties
#        - name: secrets
#          secret:
            # Create this secret via: kubectl create secret generic localmovie-firebase-key --from-file=localmovie-firebase-key.json
#            secretName: ready-up-firebase-key
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30